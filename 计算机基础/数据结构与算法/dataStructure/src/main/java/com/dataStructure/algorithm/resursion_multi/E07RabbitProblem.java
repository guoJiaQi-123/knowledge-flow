package com.dataStructure.algorithm.resursion_multi;


/**
 *      兔子问题：
 * * 第一个月，有一对未成熟的兔子（黑色，注意图中个头较小）
 * * 第二个月，它们成熟
 * * 第三个月，它们能产下一对新的小兔子（蓝色）
 * * 所有兔子遵循相同规律，求第 n 个月的兔子数
 */
public class E07RabbitProblem {

    public static int f(int n){
        if(n==1){
            return 1;
        }
        if(n==2){
            return 1;
        }

        return f(n-1)+f(n-2);
    }

    /**
     * 分析
     * 兔子问题如何与斐波那契联系起来呢？设第 n 个月兔子数为 f(n)f(n)
     * f(n)f(n) = 上个月兔子数 + 新生的小兔子数
     * 而【新生的小兔子数】实际就是【上个月成熟的兔子数】
     * 因为需要一个月兔子就成熟，所以【上个月成熟的兔子数】也就是【上上个月的兔子数】
     * 上个月兔子数，即 f(n−1)f(n-1)
     * 上上个月的兔子数，即 f(n−2)f(n-2)
     * 因此本质还是斐波那契数列，只是从其第一项开始
     */
}
